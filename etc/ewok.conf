% ewok.conf
% all time values are in seconds
% all size values are in bytes
{ewok_server, ewok, [
	{runmode, development},
	
	{server, [
		{ip, any},
		{hostname, "localhost"} %% unused
	]},
		
	{identity, [
		{keystore, "./priv/data/.keystore"},
		{password, "password"}
	]},
	
	{tasks, []}, % no conf as yet
	
	{datasources, [ 
		{default, mnesia}, % no other option offered for now (and maybe never)
		{mnesia, [
			{mod, ewok_mnesia_ds}, %%
			{args, []},
			{path, "./priv/data"}
		]},
		{riak, [{mod, riak_ds}, {args, []}]},
		{couchdb, [{mod, couchdb_ds}, {args, []}]},
		{postgresql, [{mod, ewok_postgresql_ds}, {args, []}]},
		{mysql, [{mod, mysql_ds}, {args, []}]},
		{aws_sdb, [ 
			{mod, aws_sdb_ds}, {args, []},
			%% NOTE: sample keys from Amazon - move to .keystore later
			{sdb_access_key, "022QF06E7MXBSH9DHM02"}, 
			{sdb_secret_key, "kWcrlUX5JEDGM/LtmEENI/aVmYvHNif5zB+d9+ct"}
		]}
		%% NOTE: consider other EIS tier datasource types 
		%% -- can ALL datasources be abstracted to KV stores?
	]},
	
	{queues, [
		{default, rabbitmq}, % no other option offered for now (and maybe never)
		{rabbitmq, [ %% 
			{data_path, "./priv/data"},
			{url, "amqp://localhost"},
			{port, 5432},
			{user, "admin"},
			{password, "password"}
		]}
	]},
	
	{umtp, [
		{port, 30},
		{request_timeout, 10},
		{tcp, [ 
		%% no need to touch these unless you know *exactly* what you are doing
			{max_connections, 2048},
			{socket, [
				{mode, binary},
				{reuseaddr, true},
				{packet, 0}, % don't think this is exactly the same as 'raw'
				{active, false},
				{recbuf, 8192},
				{backlog, 30},
				{nodelay, true}
			]}
		]},
		{ssl, [
			{enabled, false},
			{verify, 0}, %% for now, direct representation of SSL opts
			{depth, 1}, %% for now, direct representation of SSL opts
			{password, ""}, %% you should ONLY set this if key.pem is pw protected
			{keyfile, "./priv/ssl/key.pem"},
			{certfile, "./priv/ssl/cert.pem"},
			{cacertfile, "./priv/ssl/cacerts.pem"}
		]}
	]},	
	
	{smtp, [
		{port, 25},
		{request_timeout, 30},
		{tcp, [ 
		%% no need to touch these unless you know *exactly* what you are doing
			{max_connections, 20},
			{socket, [
				{mode, binary},
				{reuseaddr, true},
				{packet, 0}, % don't think this is exactly the same as 'raw'
				{active, false},
				{recbuf, 8192},
				{backlog, 0},
				{nodelay, true}
			]}
		]},
		{ssl, [
			{enabled, false},
			{verify, 0}, %% for now, direct representation of SSL opts
			{depth, 1}, %% for now, direct representation of SSL opts
			{password, ""}, %% you should ONLY set this if key.pem is pw protected
			{keyfile, "./priv/ssl/key.pem"},
			{certfile, "./priv/ssl/cert.pem"},
			{cacertfile, "./priv/ssl/cacerts.pem"}
		]}
	]},
	
	{http, [
		{port, 8080},
		{tcp, [ 
		%% no need to touch these unless you know *exactly* what you are doing
			{max_connections, 2048},
			{socket, [
				{mode, binary},
				{reuseaddr, true},
				{packet, 0}, % don't think this is exactly the same as 'raw'
				{active, false},
				{backlog, 30},
				{recbuf, 8192},
				{nodelay, true}
			]}
		]},
		{ssl, [
			{enabled, false},
			{verify, 0}, %% for now, direct representation of SSL opts
			{depth, 1}, %% for now, direct representation of SSL opts
			{password, ""}, %% you should ONLY set this if key.pem is pw protected
			{keyfile, "./priv/ssl/key.pem"},
			{certfile, "./priv/ssl/cert.pem"},
			{cacertfile, "./priv/ssl/cacerts.pem"}
		]},
		
		{header_limit, 100}, %% 'infinity' turns off...
		{request_timeout, 30},
		
		{deploy_root, "./priv/apps"},
		{autodeploy, [ewok_admin]},
		
		%% Cache is used in production mode to cache static files
		%% and their file information for response headers --
		%% the idea is to reduce file handles used by the system
		%% and potentially massively speed up static file serving
		%% "RAM is the new Disk" -- however you are well advised to
		%% shove all non-sensitive file resources into your downstream
		%% http server where possible and let that server do the work.
		{cache, [
			{max_file_size, 102400} % up to 100k - depends on your RAM
		]},
		
		{session, [
			{timeout, 1800}, %% http sessions timeout after 30 minutes
			{flush_interval, 120}, %% flush sessions every 2 minutes when idle
			{force_flush, 3600} %% force a cleanup of stale sessions every hour
		]},
	
		%% maybe move to a seperate def file... or as a separate term
		{ewok_mimetype, default, "application/x-octet-stream"},
		{ewok_mimetype, ".bmp", "image/bmp"},
		{ewok_mimetype, ".bz2", "application/x-bzip2"},
		{ewok_mimetype, ".css", "text/css"},
		{ewok_mimetype, ".csv", "text/csv"},
		{ewok_mimetype, ".doc", "application/msword"},
		{ewok_mimetype, ".esp", "application/xhtml+xml"},
		{ewok_mimetype, ".exe", "application/octet-stream"},
		{ewok_mimetype, ".gif", "image/gif"},
		{ewok_mimetype, ".gz", "application/x-gzip"},
		{ewok_mimetype, ".html", "text/html"},
		{ewok_mimetype, ".ico", "image/x-icon"},
		{ewok_mimetype, ".jpg", "image/jpeg"},
		{ewok_mimetype, ".js", "application/x-javascript"},
		{ewok_mimetype, ".json", "application/json"},
		{ewok_mimetype, ".m3u", "audio/x-mpegurl"},
		{ewok_mimetype, ".m4a", "audio/mpeg"},
		{ewok_mimetype, ".mov", "video/quicktime"},
		{ewok_mimetype, ".mp3", "audio/mpeg"},
		{ewok_mimetype, ".pdf", "application/pdf"},
		{ewok_mimetype, ".png", "image/png"},
		{ewok_mimetype, ".rtf", "application/rtf"},
		{ewok_mimetype, ".swf", "application/x-shockwave-flash"},
		{ewok_mimetype, ".tar", "application/x-tar"},
		{ewok_mimetype, ".tgz", "application/x-gzip"},
		{ewok_mimetype, ".txt", "text/plain"},
		{ewok_mimetype, ".ubf", "application/x-ubf"},
		{ewok_mimetype, ".xhtml", "application/xhtml+xml"},
		{ewok_mimetype, ".xls", "application/vnd.ms-excel"},
		{ewok_mimetype, ".xml", "application/xml"},		
		{ewok_mimetype, ".wav", "audio/x-wav"},
		{ewok_mimetype, ".z", "application/x-compress"},
		{ewok_mimetype, ".zip", "application/zip"}
	]},
	%% TODO: if this is moved to http, log then there's a dependency
	%% to be accounted for in create_log in ewok_logging_srv
	{log, [
		{level, info},
		{path, "./priv/log"},
		{access, [
			{enable, true},
			{rollover, infinity},
			{maxfiles, infinity}
		]},
		{auth, [
			{enable, true},
			{rollover, infinity},
			{maxfiles, infinity}
		]},
		{debug, [
			{enable, true},
			{rollover, infinity},
			{maxfiles, infinity}
		]},		
		{mail, [
			{enable, true},
			{rollover, infinity},
			{maxfiles, infinity}
		]},		
		{server, [ %
			{enable, true},
			{rollover, infinity},
			{maxfiles, infinity}		
		]}
	]}
]}.
